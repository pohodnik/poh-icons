name: NPM Publish

on:
  release:
    types: [created]
  push:
    branches: [ main ]
  pull_request:
    types: [closed]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write
  issues: write
  repository-projects: write
# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: install
        run: yarn

      - name: Build icons
        run: yarn icons:create

      - name: Set git user for commit new version
        run: |
          git config --global user.name "Pohodnik NPM Publisher"
          git config --global user.email pohodnik58@gmail.com

      - name: Check if minor version ${{ github.event.head_commit.message }}
        if: |
          contains(github.event.head_commit.message, 'minor' )
        run: echo "NEWVER=$(npm version minor)" >> $GITHUB_ENV

      - name: Check if major version ${{ github.event.head_commit.message }}
        if: |
          contains(github.event.head_commit.message, 'major' )
        run: echo "NEWVER=$(npm version major)" >> $GITHUB_ENV

      - name: Check if fallback patch version  ${{ github.event.head_commit.message }}
        if: |
          !contains(github.event.head_commit.message, 'major') &&
          !contains(github.event.head_commit.message, 'minor')
        run: echo "NEWVER=$(npm version patch)" >> $GITHUB_ENV

      - name: Final version type ${{ env.NEWVER }}
        run: echo ${{ env.NEWVER }}

      - name: Pushing new version to git
        run: |
          git push
          git push --tags

      - name: Prepare NPM
        run: echo "//registry.npmjs.org/:_authToken=${{secrets.NPM_TOKEN}}" >> ./.npmrc

      - name: Publish npm package
        run: npm publish --access public

      - name: Send telegramm notofication
        run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_TO }} -d parse_mode=html -d text="$MESSAGE" >> /dev/null
        env:
          MESSAGE: |
            <b>pohodnik icons</b> ${{ env.NEWVER }} ready!
            <code>yarn upgrade @pohodnik/pohodnik-icons --latest</code>
            <i>${{ github.event.head_commit.message }}</i>
            ${{ github.actor }}
 # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: install
        run: yarn
      - name: build
        run: yarn icons:create
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './demo'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
